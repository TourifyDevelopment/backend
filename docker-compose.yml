version: "3.9"


services:
  gateway:
    build: ./gateway
    restart: always
    hostname: gateway
    labels:
      - traefik.enable=true
      - traefik.http.routers.app_route.entrypoints=http
      - traefik.http.routers.app_route.rule=PathPrefix(`/`)
      - traefik.http.routers.app_route.service=app_service
      - traefik.http.services.app_service.loadbalancer.server.port=80
    env_file:
      - .env
    ports:
      - "80:80"
    networks:
      - backend
    depends_on:
      - mongodb
      - seq

  project:
    build: ./project
    restart: always
    hostname: project
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      - mongodb
      - seq





  mongodb:
    image: "mongo"
    container_name: "mongodb"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=test

    networks:
      - backend

  prometheus:
    image: prom/prometheus
    networks: 
      - backend
    volumes:
      - "./config:/etc/prometheus"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - "./config/grafana/datasources:/etc/grafana/provisioning/datasources"
      - "./config/grafana/dashboards:/etc/grafana/provisioning/dashboards"
      - "./config/grafana/grafana.ini:/etc/grafana/grafana.ini"
    networks:
      - backend

  traefik:
    image: traefik:v2.6
    ports:
      - "8080:8080"
      - "80:80"
    volumes:
      - "./config/traefik.yml:/etc/traefik/traefik.yml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped
    networks:
      - backend

  seq:
    image: datalust/seq
    ports:
      - "81:80"
      - "5341:5341"
    volumes:
      - "./seqdata:/data"
    environment:
      - ACCEPT_EULA=Y
      # admin password
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=FMw4y8Yz3YVX+FAEDHTb7D6RC1WF2RVIm2/FImDF63yYGxBtPg==
    restart: unless-stopped
    networks:
      - backend

networks:
  backend:
    driver: bridge